{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","newPerson","put","Notification","message","notificationStyle","color","visibility","background","fontSize","borderStyle","borderRadius","padding","marginBottom","display","style","Persons","persons","deletePerson","map","person","name","number","onClick","Filter","filter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","App","useState","setPersons","useEffect","personService","allPersons","console","log","setNewName","setNewNumber","setFilter","notification","setNotification","notificationColor","setNotificationColor","updatePerson","returnedPerson","setTimeout","catch","error","deletedAlready","event","target","preventDefault","foundPerson","find","window","confirm","concat","toLowerCase","includes","copyPersons","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a20ea571.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data);\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data);\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data);\n}\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data);\n}\n\nexport default { getAll, create, remove, update }\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(allPersons => {\n          console.log(allPersons);\n        setPersons(allPersons);\n      });\n  }, []);\n\n\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [ notification, setNotification ] = useState('');\n  const [ notificationColor, setNotificationColor ] = useState('green');\n\n  const filtered = () => {\n    return persons.filter(person => \n      person.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const foundPerson = persons.find(person => person.name === newName);\n    if (foundPerson) {\n      if (window.confirm(`${newName} is already added to phonebook. Replace the old phone number with a new one?`)) {\n        updatePerson(foundPerson, newNumber);\n      } \n      return;\n    }\n\n    const personObject = {name: newName, number: newNumber};\n    personService\n      .create(personObject)\n      .then(newPerson => {\n        setNotification(`Created entry for ${newName}`);\n        setNotificationColor('green');\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n\n        setPersons(persons.concat(newPerson));\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        setNotificationColor(\"red\");\n        console.log(error.response.data);\n        setNotification(error.response.data.error);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000)\n      });\n  }\n  \n  const deletePerson = person => {\n    if (!window.confirm(`Delete ${person.name}?`)) {\n      return;\n    }\n\n    personService\n      .remove(person.id)\n      .then(data => {\n        const copyPersons = persons.filter(p => p.id !== person.id);\n        setPersons(copyPersons);\n        setNotificationColor('green');\n        setNotification(`Deleted ${person.name}`);\n\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      })\n      .catch(error => {\n        deletedAlready(person.name);\n      })\n  }\n\n  const updatePerson = (newPerson, number) => {\n    newPerson.number = number;\n    personService\n      .update(newPerson.id, newPerson)\n      .then(returnedPerson => {\n\n        setNotification(`Updated number for ${newName}`);\n        setNotificationColor('green');\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n\n        setPersons(persons.map(person => person.id !== newPerson.id ? person : returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        deletedAlready(newPerson.name);\n      })\n  }\n\n  const deletedAlready = name => {\n        setNotification(`${name} was already removed from the server!`);\n        setNotificationColor('red');\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} color={notificationColor} />\n      <Filter value={filter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      \n      <Persons persons={filtered()} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nconst Notification = ({ message, color }) => {\n  const notificationStyle = {\n    color: color,\n    visibility: message ? 'initial' : 'hidden',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    display: 'block'\n  };\n\n  return (\n    <div style={notificationStyle}>\n      { message }\n    </div>\n  )\n}\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    <div>\n      {persons.map(person => \n        <p key={person.name}> \n          {person.name} {person.number}\n          <button onClick={() => deletePerson(person)}>\n            delete\n          </button>\n        </p>\n      )}\n    </div>\n  );\n}\n\nconst Filter = ({filter, handleFilterChange}) => {\n  return (\n    <div>\n      filter: <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}